{"version":3,"file":"static/js/404.8c899ea5.chunk.js","mappings":"+JAoBA,EAhBa,SAAH,GAQH,IAPLA,EAAS,EAATA,UACAC,EAAK,EAALA,MACAC,EAAQ,EAARA,SAMA,OACE,gBAAKF,UAAS,eAAUA,GAAaC,MAAOA,EAAM,SAC/CC,GAGP,C,oLCMA,EApBe,SAAH,GAYL,IAXLC,EAAK,EAALA,MACAC,EAAG,EAAHA,IACAC,EAAK,EAALA,MACAL,EAAS,EAATA,UACAC,EAAK,EAALA,MAQA,OACE,gBAAKD,UAAS,iBAAYA,GAAaC,MAAOA,EAAM,UAClD,gBAAKK,IAAKH,EAAOC,IAAKA,EAAKH,MAAO,CAAEI,MAAOA,EAAOE,OAAQF,MAGhE,ECdO,SAASG,EAAS,GAA4B,IAAD,EAAzBC,EAAI,EAAJA,KACnBN,EAAkB,QAAb,EAAGM,EAAKN,aAAK,aAAV,EAAYO,WAAW,KAAM,KAC3C,OACE,eAAIV,UAAU,YAAW,UACvB,SAACW,EAAA,EAAI,CAACX,UAAU,qBAAoB,UAClC,UAAC,KAAI,CAACY,GAAE,WAAMH,EAAKI,IAAG,WAAU,WAC9B,gBAAKb,UAAU,mBAAkB,SAC9BS,EAAKN,QACJ,SAAC,EAAM,CACLA,MAAOW,EAAAA,GAAcA,EAAAA,GAAcX,EAAQ,GAC3CC,IAAKK,EAAKM,KAAO,aAIvB,gBAAKf,UAAU,kBAAiB,UAC9B,wBAAKS,EAAKM,eAMtB,CCvBO,SAASC,EAAU,GAAgC,IAA9BC,EAAK,EAALA,MAC1B,OAAqB,IAAjBA,EAAMC,QAEN,gBAAKlB,UAAU,SAAQ,UACrB,SAACW,EAAA,EAAI,WACH,wBAAI,yBAOV,eAAIX,UAAU,aAAY,SACvBiB,EAAME,KAAI,SAACC,GAAI,OACd,SAAC,EAAQ,CAAgBX,KAAMW,GAAhBA,EAAKP,IAAmB,KAI/C,CCiBA,MA9BA,WACE,OAA0BQ,EAAAA,EAAAA,UAAkB,IAAG,eAAxCJ,EAAK,KAAEK,EAAQ,KACtB,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAevC,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,yCAAG,kHAEYH,EAAYI,EAAAA,IAAmB,KAAD,EAAnDC,EAAY,OAElBT,EAASS,EAAad,OAAO,uGAEhC,kBANe,mCAOhBY,GACF,GAAG,CAACH,KAKF,UAAC,WAAc,YACb,SAACM,EAAA,EAAU,CAACP,MAAOA,EAAOQ,QAASN,IAClCH,IACC,gBAAKxB,UAAU,SAAQ,UACrB,SAACkC,EAAA,EAAc,CAACC,WAAS,OAG3BX,GAAaP,IAAS,SAAC,EAAS,CAACA,MAAOA,MAGhD,C","sources":["FC/shared/components/UIElements/Card.tsx","FC/shared/components/UIElements/Avatar.tsx","FC/user/components/UserItem.tsx","FC/user/components/UsersList.tsx","FC/user/pages/Users.tsx"],"sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = ({\n  className,\n  style,\n  children,\n}: {\n  className?: String;\n  style?: React.CSSProperties;\n  children: JSX.Element | JSX.Element[];\n}) => {\n  return (\n    <div className={`card ${className}`} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./Avatar.css\";\n\nconst Avatar = ({\n  image,\n  alt,\n  width,\n  className,\n  style,\n}: {\n  image: string;\n  alt: string;\n  width?: number;\n  className?: string;\n  style?: React.CSSProperties;\n}) => {\n  return (\n    <div className={`avatar ${className}`} style={style}>\n      <img src={image} alt={alt} style={{ width: width, height: width }} />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import { Link } from \"react-router-dom\";\r\nimport { IUser } from \"../../../typing/interfaces\";\r\nimport { BACKEND_URL } from \"../../../util/Constants\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nimport \"./UserItem.css\";\r\n\r\nexport function UserItem({ user }: { user: IUser }) {\r\n  const image = user.image?.replaceAll(\"\\\\\", \"/\");\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${user._id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            {user.image && (\r\n              <Avatar\r\n                image={BACKEND_URL ? BACKEND_URL + image : \"\"}\r\n                alt={user.name + \"image\"}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{user.name}</h2>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n","import Card from \"../../shared/components/UIElements/Card\";\r\nimport { IUser } from \"../../../typing/interfaces\";\r\nimport { UserItem } from \"./UserItem\";\r\n\r\nimport \"./UsersList.css\";\r\n\r\nexport function UsersList({ users }: { users: IUser[] }) {\r\n  if (users.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {users.map((curr) => (\r\n        <UserItem key={curr._id} user={curr} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { IUser } from \"../../../typing/interfaces\";\r\nimport { ENDPOINT_GETUSERS } from \"../../../util/Constants\";\r\nimport { ErrorModal } from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { UsersList } from \"../components/UsersList\";\r\n\r\n/* ************************************************************************************************** */\r\n\r\nfunction Users() {\r\n  const [users, setUsers] = useState<IUser[]>([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(ENDPOINT_GETUSERS);\r\n\r\n        setUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  /* ************************************************************************************************** */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && users && <UsersList users={users} />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"],"names":["className","style","children","image","alt","width","src","height","UserItem","user","replaceAll","Card","to","_id","BACKEND_URL","name","UsersList","users","length","map","curr","useState","setUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","fetchUsers","ENDPOINT_GETUSERS","responseData","ErrorModal","onClear","LoadingSpinner","asOverlay"],"sourceRoot":""}